#!/usr/bin/env bash
usage="$(basename "$0") OPTIONS [size] -- create random file

OPTIONS:
    -h          Show this help message
    -d          Target directory
    -f          Target file

FUNCTION:
    size        Size in byte or human readable format you want the random file to be
"
usage() {
    echo "$usage"
    exit 1
}

for option in "$@"
do
    case $option in
        -h|--help) usage;;
        \?) printf "illegal option: -%s\n" "$OPTARG" >&2; usage;;
    esac
done

if [ $OPTIND -gt 1 ]; then shift $((OPTIND - 1)); fi
if [ $# -gt 2 ]; then usage; fi

#

dehumanise() {
    for v in "$@"
        do
            echo $v | awk \
            'BEGIN{IGNORECASE = 1}
            function printpower(n,b,p) {printf "%u\n", n*b^p;}
            /[0-9]$/{print $1;next};
            /K(B)?$/{    printpower($1, 10,  3); next };
            /M(B)?$/{    printpower($1, 10,  6); next };
            /G(B)?$/{    printpower($1, 10,  9); next };
            /T(B)?$/{    printpower($1, 10, 12); next };
            /Ki(B)?$/{printpower($1,  2, 10); next };
            /Mi(B)?$/{printpower($1,  2, 20); next };
            /Gi(B)?$/{printpower($1,  2, 30); next };
            /Ti(B)?$/{printpower($1,  2, 40); next }'
        done
}

humanise() {
    for v in "$@"
        do
            echo $v | awk \
            'BEGIN{IGNORECASE = 1}
            function human(x) {
                if (x<1000) {return x} else {x/=1000}
                s="kMGTEPYZ";
                while (x>=1000 && length(s)>1)
                {x/=1000; s=substr(s,2)}
                return x substr(s,1,1)
            }
            {sub(/^[0-9]+/, human($1)); print $1"B"}'
        done
}

# Optional: user specified file size
if test -z "$1"
then
    # default size
    file_size=`dehumanise 1M`
else
    file_size=`dehumanise $1`
fi

if test -z "$file_size"
then
    echo "ERROR: could not parse given size"
    usage
    exit 1
fi

# Optional: user specified target file
if test -z "$2"
then
    file_name="/tmp/randfile.`echo date$$ | md5`"
elif [[ -f $2 ]]
then
    # file already exists
    echo "ERROR: target file already exists"
    exit 1
elif [[ -d $2 ]]
then
    file_name="`realpath $2`/randfile.`echo date$$ | md5`"
else
    file_name=$2
fi

if test -z "$file_name"
then
    echo "ERROR: could not parse given path"
    usage
    exit 1
fi


# print file information
echo "Generating test file ..."
echo "  File: $file_name"
echo "  Size: `humanise $file_size` ..."
`dd if=/dev/urandom of=$file_name bs=$(echo "$file_size" | bc) count=1 &> /dev/null`

exit $?
